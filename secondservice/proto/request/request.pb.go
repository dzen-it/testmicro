// Code generated by protoc-gen-go.
// source: testmicro/secondservice/proto/request/request.proto
// DO NOT EDIT!

/*
Package request is a generated protocol buffer package.

It is generated from these files:
	testmicro/secondservice/proto/request/request.proto

It has these top-level messages:
	GetRequest
	GetResponse
*/
package request

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"

	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetResponse struct {
	Resp string `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*GetResponse)(nil), "GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Second service

type SecondClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error)
}

type secondClient struct {
	c           client.Client
	serviceName string
}

func NewSecondClient(serviceName string, c client.Client) SecondClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "second"
	}
	return &secondClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *secondClient) Get(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*GetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Second.Get", in)
	out := new(GetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Second service

type SecondHandler interface {
	Get(context.Context, *GetRequest, *GetResponse) error
}

func RegisterSecondHandler(s server.Server, hdlr SecondHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Second{hdlr}, opts...))
}

type Second struct {
	SecondHandler
}

func (h *Second) Get(ctx context.Context, in *GetRequest, out *GetResponse) error {
	return h.SecondHandler.Get(ctx, in, out)
}

func init() {
	proto.RegisterFile("testmicro/secondservice/proto/request/request.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x32, 0x2e, 0x49, 0x2d, 0x2e,
	0xc9, 0xcd, 0x4c, 0x2e, 0xca, 0xd7, 0x2f, 0x4e, 0x4d, 0xce, 0xcf, 0x4b, 0x29, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x4a, 0x2d, 0x2c, 0x05, 0x2a,
	0x80, 0xd1, 0x7a, 0x60, 0x51, 0x25, 0x05, 0x2e, 0x2e, 0xf7, 0xd4, 0x92, 0x20, 0x88, 0x98, 0x90,
	0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad,
	0xa4, 0xc8, 0xc5, 0x0d, 0x56, 0x51, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x0a, 0x52, 0x52, 0x04, 0x64,
	0xc3, 0x94, 0x80, 0xd8, 0x46, 0x5a, 0x5c, 0x6c, 0x10, 0x1b, 0x85, 0x14, 0xb8, 0x98, 0x81, 0x8a,
	0x85, 0xb8, 0xf5, 0x10, 0x86, 0x4a, 0xf1, 0xe8, 0x21, 0xe9, 0x4f, 0x62, 0x03, 0xdb, 0x6b, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x45, 0xae, 0x69, 0xae, 0x00, 0x00, 0x00,
}
